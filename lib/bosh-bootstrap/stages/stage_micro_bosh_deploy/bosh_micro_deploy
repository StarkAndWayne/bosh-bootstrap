#!/usr/bin/env bash

# Deploys a micro BOSH using "bosh micro deploy"
#
# Required:
# * $BOSH_NAME - name of bosh deployment
#   (thus /var/vcap/store/microboshes/deployments/$BOSH_NAME/micro_bosh.yml exists)
# * $MICRO_BOSH_STEMCELL_NAME - public stemcell name at
#   /var/vcap/store/stemcells/$MICRO_BOSH_STEMCELL_NAME

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

MICRO_BOSH_STEMCELL_PATH=/var/vcap/store/stemcells/$MICRO_BOSH_STEMCELL_NAME

export COLUMNS=80 # force a small width for progress bar
export TMPDIR=/var/vcap/store/tmp

cd /var/vcap/store/microboshes/deployments/
bosh -n micro deployment $BOSH_NAME

if [[ "${MICRO_BOSH_STEMCELL_NAME}" == "custom" ]]; then
  MICRO_BOSH_STEMCELL_PATH=$(ls -t /var/tmp/bosh/bosh_agent-*/work/work/*.tgz | sort | tail -n 1)
  echo "Custom stemcell path $MICRO_BOSH_STEMCELL_PATH"
else
  echo "Downloaded stemcell path $MICRO_BOSH_STEMCELL_PATH"
fi

if [[ -f bosh-deployments.yml ]]; then
  deployment=$(cat bosh-deployments.yml | yaml get instances -j | jazor "find {|inst| inst['name'] == '$BOSH_NAME' }")
else
  deployment=""
fi

# if $BOSH_NAME has never been deployed before, then $deployment will be empty
# if $BOSH_NAME was previously deployed but deleted then $deployment will look like:
#   {
#     "id": 1,
#     "name": "microbosh-aws-us-east-1",
#     "uuid": "bm-096bc437-b531-4260-a57f-8ea54db2f8d2",
#     "stemcell_cid": null,
#     "stemcell_name": null,
#     "vm_cid": null,
#     "disk_cid": null
#   }
# if $BOSH_NAME has been deployed but it failed mid-way, then some of the _cid fields above will be set.

echo ""
echo ""

if [[ "${deployment}X" == "X" ]]; then
  echo "Performing initial deploy of micro BOSH $BOSH_NAME"
  bosh -n --color micro deploy $MICRO_BOSH_STEMCELL_PATH
  touch $BOSH_NAME/new_bosh_deployed # to communicate with setup_bosh_user script
else
  # determine if re-deploy, update, or delete&deploy

  stemcell_cid=$(echo $deployment | jazor stemcell_cid)
  vm_cid=$(echo $deployment | jazor vm_cid)
  disk_cid=$(echo $deployment | jazor disk_cid)

  if [[ $stemcell_cid == "" && $vm_cid == "" && $disk_cid == "" ]]; then
    echo "Deployment was deleted; deploying micro BOSH $BOSH_NAME again"
    bosh -n --color micro deploy $MICRO_BOSH_STEMCELL_PATH
    touch $BOSH_NAME/new_bosh_deployed # to communicate with setup_bosh_user script
  elif [[ $stemcell_cid == "" || $vm_cid == "" || $disk_cid == "" ]]; then
    echo "Deployment previously failed to complete. Deleting and deploying micro BOSH $BOSH_NAME again."
    bosh -n --color micro delete
    bosh -n --color micro deploy $MICRO_BOSH_STEMCELL_PATH
    touch $BOSH_NAME/new_bosh_deployed # to communicate with setup_bosh_user script
  else
    echo "Performing update deploy to micro BOSH $BOSH_NAME"
    bosh -n --color micro deploy $MICRO_BOSH_STEMCELL_PATH --update
  fi
fi
