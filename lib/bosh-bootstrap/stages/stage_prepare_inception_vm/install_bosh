#!/usr/bin/env bash

# Install BOSH CLI
#
# Options:
# * $UPGRADE - re-install or upgrade gems if already installed
# * $INSTALL_BOSH_FROM_SOURCE - install from bosh git repo

if [[ $EUID -ne 0 ]]; then
  echo "ERROR: This script must be run as root" 1>&2
  exit 1
fi

# Install a gem if $UPGRADE exists or if gem not already installed
function install_gem() {
  gem_name=$1
  if [[ ("${UPGRADE}X" != "X") || "$(gem list $gem_name | grep $gem_name)X" == "X" ]]; then
    gem install $gem_name --no-ri --no-rdoc
  else
    echo gem $gem_name already installed
  fi
}

if [[ "${INSTALL_BOSH_FROM_SOURCE}X" != "X" ]]; then
  mkdir -p /var/vcap/store/repos
  cd /var/vcap/store/repos
  if [[ -d bosh ]]; then
    cd bosh
    git pull origin master
  else
    git clone https://github.com/cloudfoundry/bosh.git
  fi

  bosh_dir=/var/vcap/store/repos/bosh
  projects=(
    bosh_common 
    blobstore_client 
    bosh_cpi
    ruby_vcloud_sdk
    bosh_vcloud_cpi 
    ruby_vim_sdk
    bosh_vsphere_cpi
    bosh_aws_cpi 
    agent_client 
    bosh_cli 
    bosh_deployer 
    bosh_aws_registry 
    bosh_openstack_registry
  )
  for project in "${projects[@]}"; do
    cd $bosh_dir/$project/
    rm -rf pkg
    bundle install --without=development test
    gem build *.gemspec
    mkdir -p pkg
    mv *.gem pkg/
    gem install pkg/*.gem --no-ri --no-rdoc
  done

else
  install_gem bosh_cli
  # TODO remove this when bosh_deployer starts installing aws-sdk 1.8.1.1 or higher
  install_gem httparty
  # end TODO
  install_gem bosh_deployer
fi

if [[ ! -d /var/tmp/bosh ]]; then
  echo "Symlinking the expected stemcell creation folder into mounted volume..."
  mkdir -p /var/vcap/store/tmp/bosh
  ln -s /var/vcap/store/tmp/bosh /var/tmp/bosh
fi
